"""
Django settings for api project.

Generated by 'django-admin startproject' using Django 5.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


import os
from dotenv import load_dotenv
import firebase_admin
from firebase_admin import credentials

load_dotenv()
FERNET_KEY = os.getenv('FERNET_KEY')
INFURA_PROJECT_ID = os.getenv('INFURA_PROJECT_ID')
ALCHEMY_PROJECT_ID =  os.getenv('ALCHEMY_PROJECT_ID')



cred = credentials.Certificate("./wallet/serviceAccount.json")
firebase_admin.initialize_app(cred)





# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-dyi2m^h*%d*u6!-kvanv5&-q(y!d&-qj)=z&r2z*9+62nv&%fm'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders',
    'rest_framework',
    'rest_framework.authtoken',
    'wallet',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'api.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]


AUTHENTICATION_BACKENDS = [
    'wallet.authentication.FirebaseAuthentication',
    'django.contrib.auth.backends.ModelBackend',  # For admin users
]


REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.TokenAuthentication',
        
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
        'rest_framework.authentication.SessionAuthentication',
    ]
}
WSGI_APPLICATION = 'api.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}
AUTH_USER_MODEL = 'wallet.User'

# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]
CORS_ALLOW_ALL_ORIGINS = True

# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# In your settings.py or wherever you define chain configurations
CHAIN_CONFIGS = {
    'ethereum': {
        'id': 1,
        'name': 'Ethereum',
        'rpc_url': 'https://eth.llamarpc.com',
        'explorer': 'https://etherscan.io',
        'native_currency': 'ETH',
        'tokens': {
            'usdc': '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',
            'usdt': '0xdAC17F958D2ee523a2206206994597C13D831ec7'
        }
    },
    'polygon': {
        'id': 137,
        'name': 'Polygon',
        'rpc_url': 'https://polygon.llamarpc.com',
        'explorer': 'https://polygonscan.com',
        'native_currency': 'MATIC',
        'tokens': {
            'usdc': '0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174',
            'usdt': '0xc2132D05D31c914a87C6611C10748AEb04B58e8F'
        }
    },
    'base': {
        'id': 8453,
        'name': 'Base',
        'rpc_url': 'https://base.publicnode.com',
        'explorer': 'https://basescan.org',
        'native_currency': 'ETH',
        'tokens': {
            'usdc': '0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913'
        }
    },
    # Add more chains as needed
}

CORS_ALLOWED_ORIGINS = [
    "http://localhost:5173",  # Your React app's URL
]

CORS_ALLOW_CREDENTIALS = True
CORS_ALLOW_HEADERS = [
    'authorization',
    'content-type',
]
